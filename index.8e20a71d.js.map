{"mappings":"AAAuBA,SAASC,cAAc,gBAA9C,MACMC,EAAkBF,SAASC,cAAc,iBACzCE,EAAyBH,SAASC,cAAc,wBAChDG,EAAsBJ,SAASC,cAAc,sBAC7CI,EAAiBL,SAASC,cAAc,gBAE9C,SAASK,EAASC,GACjBA,EAAMC,KAAKC,MAAMF,GACjB,IAAIG,EAAS,GAEb,KAAOH,EAAM,KAAM,CAClB,IAAII,EAAWJ,EAAM,IAEJ,IAAbI,IACHA,EAAW,OAEZJ,EAAMC,KAAKI,MAAML,EAAM,KACvBG,EAAS,GAAGC,KAAYD,G,CAKzB,OAFAA,EAAS,GAAGH,KAAOG,IAEZA,C,CAsBR,SAASG,IACR,MAAMC,EAASC,OAAOb,EAAgBc,OAChCC,EAAuBF,OAAOZ,EAAuBa,OAAS,IAC9DE,EAAoBH,OAAOX,EAAoBY,OAAS,IAExDG,EAAaX,KAAKC,MAAMK,EAASI,GACjCE,EAAiBZ,KAAKC,MAAmB,GAAbU,GAC5BE,EAAoBb,KAAKC,MAAMW,EAAiBH,GAC3BT,KAAKC,MAAMY,EAAoB,IAE1DhB,EAAeiB,UAAY,4EAE+BhB,EAASa,+FAGXb,EAASc,4BAIjE,MACMG,EAwCP,SAAqBC,GACpB,MAAMD,EAAYvB,SAASyB,cAAc,SACnCC,EAAY1B,SAASyB,cAAc,SAEzCF,EAAUI,UAAUC,IAAI,SACxBL,EAAUD,UAAY,iOAYtB,IAAK,MAAMO,KAAEA,EAAIC,WAAEA,EAAUC,SAAEA,EAAQC,QAAEA,EAAOC,cAAEA,KAAmBT,EACpEE,EAAUJ,WAAa,6BAEfO,uBACAC,uBACAC,uBACAC,uBACAC,4BAOT,OAFAV,EAAUW,YAAYR,GAEfH,C,CAvEWY,CADAC,EAAkB,C,OAAEtB,E,qBAAQG,E,kBAAsBC,KAGpEb,EAAe6B,YAAYX,E,CAgB5B,SAASa,GAAkBtB,OAAEA,EAAMG,qBAAEA,EAAoBC,kBAAEA,IAC1D,MAAMmB,EAAkB7B,KAAKC,MAAMK,EAASI,EAAoB,IAChE,IAAIc,EAAUK,GAAmB,EAAIpB,GACjCgB,EAAgBzB,KAAKC,MAAMuB,EAAW,GAAMf,GAC5Ca,EAAaO,EACbN,EAAWvB,KAAKC,MAAMqB,EAAab,GAEvC,MAAMqB,EAAY,CACjB,CAAET,KAAM,E,WAAGC,E,SAAYC,E,QAAUC,E,cAASC,IAG3C,IAAK,IAAIJ,EAAO,EAAGI,EAAgBnB,EAAQe,IAC1CG,EAAUxB,KAAKC,OAAOuB,EAAUK,IAAoB,EAAIpB,IACxDc,EAAWvB,KAAKC,MAAOuB,EAAWK,EAAkBR,GACpDI,EAAgBzB,KAAKC,MAAMuB,EAAW,GAAMf,GAC5Ca,GAAcO,EACdC,EAAUC,KAAK,C,KAAEV,E,WAAMC,E,SAAYC,E,QAAUC,E,cAASC,IAGvD,OAAOK,C,CAhCR,CACCpC,EACAC,EACAC,GACCoC,SAAQC,IACTA,EAAKC,iBAAiB,SAAUC,KAjDjC,SAAuBA,GACtB,MAAMC,EAAYD,EAAME,OAExB,IAAKD,EAAUE,gBAAiB,CAC/B,MAAMvC,EAAMQ,OAAO6B,EAAU5B,OACvB+B,EAAMhC,OAAO6B,EAAUG,KACvBC,EAAMjC,OAAO6B,EAAUI,KAEvBC,EAAczC,KAAK0C,IAAI3C,EAAMwC,GAC7BI,EAAc3C,KAAK0C,IAAI3C,EAAMyC,GAGlCJ,EAAU5B,MADPiC,GAAeE,EACAP,EAAUI,IAEVJ,EAAUG,G,EAoC7BK,CAAcT,GACd9B,GAAM,GACL,IAGHA,IA2DAwC,QAAQC,IAAIlB,EAAkB,CAAEtB,OAAQ,IAAQG,qBAAsB,GAAKC,kBAAmB","sources":["src/index.js"],"sourcesContent":["const formSalaryNode = document.querySelector('.form-salary');\nconst inputSalaryNode = document.querySelector('.input-salary');\nconst inputProfitabilityNode = document.querySelector('.input-profitability');\nconst inputSaveSalaryNode = document.querySelector('.input-save-salary');\nconst formOutputNode = document.querySelector('.form-output');\n\nfunction parseNum(num) {\n\tnum = Math.round(num);\n\tlet strNum = '';\n\n\twhile (num > 1000) {\n\t\tlet numRight = num % 1000;\n\n\t\tif (numRight === 0) {\n\t\t\tnumRight = '000';\n\t\t}\n\t\tnum = Math.floor(num / 1000);\n\t\tstrNum = `${numRight} ${strNum}`;\n\t}\n\n\tstrNum = `${num} ${strNum}`;\n\n\treturn strNum;\n}\n\nfunction validateInput(event) {\n\tconst inputNode = event.target;\n\n\tif (!inputNode.checkValidity()) {\n\t\tconst num = Number(inputNode.value);\n\t\tconst min = Number(inputNode.min)\n\t\tconst max = Number(inputNode.max);\n\n\t\tconst distanceMax = Math.abs(num - min);\n\t\tconst distanceMin = Math.abs(num - max);\n\n\t\tif (distanceMax >= distanceMin) {\n\t\t\tinputNode.value = inputNode.max;\n\t\t} else {\n\t\t\tinputNode.value = inputNode.min;\n\t\t}\n\t}\n}\n\nfunction calc() {\n\tconst salary = Number(inputSalaryNode.value);\n\tconst profitabilityPercent = Number(inputProfitabilityNode.value) / 100;\n\tconst saveSalaryPercent = Number(inputSaveSalaryNode.value) / 100;\n\n\tconst saveSalary = Math.round(salary * saveSalaryPercent); // Сколько отложили за месяц\n\tconst saveSalaryYear = Math.round(saveSalary * 12); // Сколько отложили за год\n\tconst passiveSalaryYear = Math.round(saveSalaryYear * profitabilityPercent); // Пассивный доход в год\n\tconst passiveSalaryMonth = Math.round(passiveSalaryYear / 12); // Пассивный доход в месяц\n\n\tformOutputNode.innerHTML = `\n\t\t<div>\n\t\t\tОткладываем в месяц: <span class=\"white-space-nowrap\">${parseNum(saveSalary)}</span>\n\t\t</div>\n\t\t<div>\n\t\t\tОткладываем в год: <span class=\"white-space-nowrap\">${parseNum(saveSalaryYear)}</span>\n\t\t</div>\n\t`;\n\n\tconst salaryArr = calcPassiveSalary({ salary, profitabilityPercent, saveSalaryPercent });\n\tconst tableNode = createTable(salaryArr);\n\n\tformOutputNode.appendChild(tableNode);\n}\n\n[\n\tinputSalaryNode,\n\tinputProfitabilityNode,\n\tinputSaveSalaryNode\n].forEach(node => {\n\tnode.addEventListener('input', (event) => {\n\t\tvalidateInput(event);\n\t\tcalc();\n\t});\n});\n\ncalc();\n\nfunction calcPassiveSalary({ salary, profitabilityPercent, saveSalaryPercent }) {\n\tconst saveSalaryMonth = Math.round(salary * saveSalaryPercent * 12);\n\tlet capital = saveSalaryMonth * (1 + profitabilityPercent);\n\tlet passiveSalary = Math.round((capital / 12) * profitabilityPercent);\n\tlet postponned = saveSalaryMonth;\n\tlet percents = Math.round(postponned * profitabilityPercent);\n\n\tconst resultArr = [\n\t\t{ year: 1, postponned, percents, capital, passiveSalary }\n\t];\n\n\tfor (let year = 2; passiveSalary < salary; year++) {\n\t\tcapital = Math.round((capital + saveSalaryMonth) * (1 + profitabilityPercent));\n\t\tpercents = Math.round((capital - (saveSalaryMonth * year)));\n\t\tpassiveSalary = Math.round((capital / 12) * profitabilityPercent);\n\t\tpostponned += saveSalaryMonth;\n\t\tresultArr.push({ year, postponned, percents, capital, passiveSalary });\n\t}\n\n\treturn resultArr;\n}\n\nfunction createTable(salaryArr) {\n\tconst tableNode = document.createElement('table');\n\tconst tbodyNode = document.createElement('tbody');\n\n\ttableNode.classList.add('table');\n\ttableNode.innerHTML = `\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Год</th>\n\t\t\t\t<th>Отложили в сумме</th>\n\t\t\t\t<th>Накапало процентов</th>\n\t\t\t\t<th>Отложили + проценты</th>\n\t\t\t\t<th>Пассивный доход</th>\n\t\t\t</tr>\n\t\t</thead>\n\t`;\n\n\tfor (const { year, postponned, percents, capital, passiveSalary } of salaryArr) {\n\t\ttbodyNode.innerHTML += `\n\t\t\t<tr>\n\t\t\t\t<td>${year}</td>\n\t\t\t\t<td>${postponned}</td>\n\t\t\t\t<td>${percents}</td>\n\t\t\t\t<td>${capital}</td>\n\t\t\t\t<td>${passiveSalary}</td>\n\t\t\t</tr>\n\t\t`;\n\t}\n\n\ttableNode.appendChild(tbodyNode);\n\n\treturn tableNode;\n}\n\n\nconsole.log(calcPassiveSalary({ salary: 100000, profitabilityPercent: 0.2, saveSalaryPercent: 0.2 }));\n"],"names":["document","querySelector","$35da740d59af89ba$var$inputSalaryNode","$35da740d59af89ba$var$inputProfitabilityNode","$35da740d59af89ba$var$inputSaveSalaryNode","$35da740d59af89ba$var$formOutputNode","$35da740d59af89ba$var$parseNum","num","Math","round","strNum","numRight","floor","$35da740d59af89ba$var$calc","salary","Number","value","profitabilityPercent","saveSalaryPercent","saveSalary","saveSalaryYear","passiveSalaryYear","innerHTML","tableNode","salaryArr","createElement","tbodyNode","classList","add","year","postponned","percents","capital","passiveSalary","appendChild","$35da740d59af89ba$var$createTable","$35da740d59af89ba$var$calcPassiveSalary","saveSalaryMonth","resultArr","push","forEach","node","addEventListener","event","inputNode","target","checkValidity","min","max","distanceMax","abs","distanceMin","$35da740d59af89ba$var$validateInput","console","log"],"version":3,"file":"index.8e20a71d.js.map"}