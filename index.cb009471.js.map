{"mappings":"AAAuBA,SAASC,cAAc,gBAA9C,MACMC,EAAkBF,SAASC,cAAc,iBACzCE,EAAyBH,SAASC,cAAc,wBAChDG,EAAsBJ,SAASC,cAAc,sBAC7CI,EAAiBL,SAASC,cAAc,gBAE9C,SAASK,EAASC,GACjBA,EAAMC,KAAKC,MAAMF,GACjB,IAAIG,EAAS,GAEb,KAAOH,EAAM,KAAM,CAClB,IAAII,EAAWJ,EAAM,IAEJ,IAAbI,IACHA,EAAW,OAEZJ,EAAMC,KAAKI,MAAML,EAAM,KACvBG,EAAS,GAAGC,KAAYD,G,CAKzB,OAFAA,EAAS,GAAGH,KAAOG,IAEZA,C,CAsBR,SAASG,IACR,MAAMC,EAASC,OAAOb,EAAgBc,OAChCC,EAAuBF,OAAOZ,EAAuBa,OAAS,IAC9DE,EAAoBH,OAAOX,EAAoBY,OAAS,IAExDG,EAAaX,KAAKC,MAAMK,EAASI,GACjCE,EAAiBZ,KAAKC,MAAmB,GAAbU,GAC5BE,EAAoBb,KAAKC,MAAMW,EAAiBH,GAC3BT,KAAKC,MAAMY,EAAoB,IAE1DhB,EAAeiB,UAAY,2HAGgChB,EAASa,wHAGXb,EAASc,0CAKlE,MAAMG,EAmBP,UAA2BT,OAAEA,EAAMG,qBAAEA,EAAoBC,kBAAEA,IAC1D,MAAMM,EAAkBhB,KAAKC,MAAMK,EAASI,EAAoB,IAChE,IAAIO,EAAUD,GAAmB,EAAIP,GACjCS,EAAgBlB,KAAKC,MAAMgB,EAAW,GAAMR,GAC5CU,EAAaH,EACbI,EAAWpB,KAAKC,MAAMkB,EAAaV,GAEvC,MAAMY,EAAY,CACjB,CAAEC,KAAM,E,WAAGH,E,SAAYC,E,QAAUH,E,cAASC,IAG3C,IAAK,IAAII,EAAO,EAAGJ,EAAgBZ,EAAQgB,IAC1CL,EAAUjB,KAAKC,OAAOgB,EAAUD,IAAoB,EAAIP,IACxDW,EAAWpB,KAAKC,MAAOgB,EAAWD,EAAkBM,GACpDJ,EAAgBlB,KAAKC,MAAMgB,EAAW,GAAMR,GAC5CU,GAAcH,EACdK,EAAUE,KAAK,C,KAAED,E,WAAMH,E,SAAYC,E,QAAUH,E,cAASC,IAGvD,OAAOG,C,CAtCWG,CAAkB,C,OAAElB,E,qBAAQG,E,kBAAsBC,IAC9De,EAwCP,SAAqBV,GACpB,MAAMU,EAAYjC,SAASkC,cAAc,SACnCC,EAAYnC,SAASkC,cAAc,SACnCE,EAAmBpC,SAASkC,cAAc,OAEhDD,EAAUI,UAAUC,IAAI,SACxBL,EAAUX,UAAY,0PAYtB,IAAK,MAAMQ,KAAEA,EAAIH,WAAEA,EAAUC,SAAEA,EAAQH,QAAEA,EAAOC,cAAEA,KAAmBH,EACpEY,EAAUb,WAAa,6BAEfQ,uBACAH,uBACAC,uBACAH,uBACAC,4BAUT,OALAO,EAAUM,YAAYJ,GAEtBC,EAAiBC,UAAUC,IAAI,iBAC/BF,EAAiBG,YAAYN,GAEtBG,C,CA3EWI,CAAYjB,GAE9BlB,EAAekC,YAAYN,E,CAG5B,CACC/B,EACAC,EACAC,GACCqC,SAAQC,IACTA,EAAKC,iBAAiB,SAAUC,KAnDjC,SAAuBA,GACtB,MAAMC,EAAYD,EAAME,OAExB,IAAKD,EAAUE,gBAAiB,CAC/B,MAAMxC,EAAMQ,OAAO8B,EAAU7B,OACvBgC,EAAMjC,OAAO8B,EAAUG,KACvBC,EAAMlC,OAAO8B,EAAUI,KAEvBC,EAAc1C,KAAK2C,IAAI5C,EAAMyC,GAC7BI,EAAc5C,KAAK2C,IAAI5C,EAAM0C,GAGlCJ,EAAU7B,MADPkC,GAAeE,EACAP,EAAUI,IAEVJ,EAAUG,G,EAsC7BK,CAAcT,GACd/B,GAAM,GACL,IAGHA","sources":["src/index.js"],"sourcesContent":["const formSalaryNode = document.querySelector('.form-salary');\nconst inputSalaryNode = document.querySelector('.input-salary');\nconst inputProfitabilityNode = document.querySelector('.input-profitability');\nconst inputSaveSalaryNode = document.querySelector('.input-save-salary');\nconst formOutputNode = document.querySelector('.form-output');\n\nfunction parseNum(num) {\n\tnum = Math.round(num);\n\tlet strNum = '';\n\n\twhile (num > 1000) {\n\t\tlet numRight = num % 1000;\n\n\t\tif (numRight === 0) {\n\t\t\tnumRight = '000';\n\t\t}\n\t\tnum = Math.floor(num / 1000);\n\t\tstrNum = `${numRight} ${strNum}`;\n\t}\n\n\tstrNum = `${num} ${strNum}`;\n\n\treturn strNum;\n}\n\nfunction validateInput(event) {\n\tconst inputNode = event.target;\n\n\tif (!inputNode.checkValidity()) {\n\t\tconst num = Number(inputNode.value);\n\t\tconst min = Number(inputNode.min)\n\t\tconst max = Number(inputNode.max);\n\n\t\tconst distanceMax = Math.abs(num - min);\n\t\tconst distanceMin = Math.abs(num - max);\n\n\t\tif (distanceMax >= distanceMin) {\n\t\t\tinputNode.value = inputNode.max;\n\t\t} else {\n\t\t\tinputNode.value = inputNode.min;\n\t\t}\n\t}\n}\n\nfunction calc() {\n\tconst salary = Number(inputSalaryNode.value);\n\tconst profitabilityPercent = Number(inputProfitabilityNode.value) / 100;\n\tconst saveSalaryPercent = Number(inputSaveSalaryNode.value) / 100;\n\n\tconst saveSalary = Math.round(salary * saveSalaryPercent); // Сколько отложили за месяц\n\tconst saveSalaryYear = Math.round(saveSalary * 12); // Сколько отложили за год\n\tconst passiveSalaryYear = Math.round(saveSalaryYear * profitabilityPercent); // Пассивный доход в год\n\tconst passiveSalaryMonth = Math.round(passiveSalaryYear / 12); // Пассивный доход в месяц\n\n\tformOutputNode.innerHTML = `\n\t\t<div class=\"info\">\n\t\t\t<div class=\"info__item\">\n\t\t\t\tОткладываем в месяц: <span class=\"white-space-nowrap\">${parseNum(saveSalary)}</span>\n\t\t\t</div>\n\t\t\t<div class=\"info__item\">\n\t\t\t\tОткладываем в год: <span class=\"white-space-nowrap\">${parseNum(saveSalaryYear)}</span>\n\t\t\t</div>\n\t\t</div>\n\t`;\n\n\tconst salaryArr = calcPassiveSalary({ salary, profitabilityPercent, saveSalaryPercent });\n\tconst tableNode = createTable(salaryArr);\n\n\tformOutputNode.appendChild(tableNode);\n}\n\n[\n\tinputSalaryNode,\n\tinputProfitabilityNode,\n\tinputSaveSalaryNode\n].forEach(node => {\n\tnode.addEventListener('input', (event) => {\n\t\tvalidateInput(event);\n\t\tcalc();\n\t});\n});\n\ncalc();\n\nfunction calcPassiveSalary({ salary, profitabilityPercent, saveSalaryPercent }) {\n\tconst saveSalaryMonth = Math.round(salary * saveSalaryPercent * 12);\n\tlet capital = saveSalaryMonth * (1 + profitabilityPercent);\n\tlet passiveSalary = Math.round((capital / 12) * profitabilityPercent);\n\tlet postponned = saveSalaryMonth;\n\tlet percents = Math.round(postponned * profitabilityPercent);\n\n\tconst resultArr = [\n\t\t{ year: 1, postponned, percents, capital, passiveSalary }\n\t];\n\n\tfor (let year = 2; passiveSalary < salary; year++) {\n\t\tcapital = Math.round((capital + saveSalaryMonth) * (1 + profitabilityPercent));\n\t\tpercents = Math.round((capital - (saveSalaryMonth * year)));\n\t\tpassiveSalary = Math.round((capital / 12) * profitabilityPercent);\n\t\tpostponned += saveSalaryMonth;\n\t\tresultArr.push({ year, postponned, percents, capital, passiveSalary });\n\t}\n\n\treturn resultArr;\n}\n\nfunction createTable(salaryArr) {\n\tconst tableNode = document.createElement('table');\n\tconst tbodyNode = document.createElement('tbody');\n\tconst wrapperTableNode = document.createElement('div');\n\n\ttableNode.classList.add('table');\n\ttableNode.innerHTML = `\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Год</th>\n\t\t\t\t<th>Отложили <br> в <br>сумме</th>\n\t\t\t\t<th>Накапало<br> процентов</th>\n\t\t\t\t<th>Отложили <br>+<br> проценты</th>\n\t\t\t\t<th>Пассивный<br> доход</th>\n\t\t\t</tr>\n\t\t</thead>\n\t`;\n\n\tfor (const { year, postponned, percents, capital, passiveSalary } of salaryArr) {\n\t\ttbodyNode.innerHTML += `\n\t\t\t<tr>\n\t\t\t\t<td>${year}</td>\n\t\t\t\t<td>${postponned}</td>\n\t\t\t\t<td>${percents}</td>\n\t\t\t\t<td>${capital}</td>\n\t\t\t\t<td>${passiveSalary}</td>\n\t\t\t</tr>\n\t\t`;\n\t}\n\n\ttableNode.appendChild(tbodyNode);\n\n\twrapperTableNode.classList.add('table-wrapper');\n\twrapperTableNode.appendChild(tableNode);\n\n\treturn wrapperTableNode;\n}\n"],"names":["document","querySelector","$35da740d59af89ba$var$inputSalaryNode","$35da740d59af89ba$var$inputProfitabilityNode","$35da740d59af89ba$var$inputSaveSalaryNode","$35da740d59af89ba$var$formOutputNode","$35da740d59af89ba$var$parseNum","num","Math","round","strNum","numRight","floor","$35da740d59af89ba$var$calc","salary","Number","value","profitabilityPercent","saveSalaryPercent","saveSalary","saveSalaryYear","passiveSalaryYear","innerHTML","salaryArr","saveSalaryMonth","capital","passiveSalary","postponned","percents","resultArr","year","push","$35da740d59af89ba$var$calcPassiveSalary","tableNode","createElement","tbodyNode","wrapperTableNode","classList","add","appendChild","$35da740d59af89ba$var$createTable","forEach","node","addEventListener","event","inputNode","target","checkValidity","min","max","distanceMax","abs","distanceMin","$35da740d59af89ba$var$validateInput"],"version":3,"file":"index.cb009471.js.map"}